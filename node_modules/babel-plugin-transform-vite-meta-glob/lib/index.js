"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = viteMetaGlobBabelPlugin;

var _path = _interopRequireDefault(require("path"));

var _glob = _interopRequireDefault(require("glob"));

function viteMetaGlobBabelPlugin({
  types: t
}) {
  const asts = {
    glob: path => t.arrowFunctionExpression([], t.callExpression(t.identifier('import'), [t.stringLiteral(path)])),
    globEager: path => t.callExpression(t.identifier('require'), [t.stringLiteral(path)])
  };

  const isGlobKey = propertyName => Object.keys(asts).includes(propertyName);

  return {
    name: 'vite-meta-glob',
    visitor: {
      CallExpression(path, state) {
        const callee = t.isMemberExpression(path.node.callee) && path.node.callee;

        if (!callee) {
          return;
        }

        const args = path.node.arguments;
        const sourceFile = state.file.opts.filename;
        const propertyName = t.isIdentifier(callee.property) && callee.property.name;

        if (!sourceFile || !propertyName) {
          return;
        }

        if (isGlobKey(propertyName) && t.isMetaProperty(callee.object) && args.length === 1 && t.isStringLiteral(args[0])) {
          const cwd = _path.default.dirname(sourceFile);

          const globPaths = _glob.default.sync(args[0].value, {
            cwd
          });

          const replacement = t.objectExpression(globPaths.map(globPath => t.objectProperty(t.stringLiteral(globPath), asts[propertyName](globPath))));
          path.replaceWith(replacement);
        }
      }

    }
  };
}