{
  "version": 3,
  "sources": ["../../node-fetch/browser.js", "../../@replit/database/index.js"],
  "sourcesContent": ["\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n", "const fetch = require(\"node-fetch\");\n\nclass Client {\n  /**\n   * Initiates Class.\n   * @param {String} key Custom database URL\n   */\n  constructor(key) {\n    if (key) this.key = key;\n    else this.key = process.env.REPLIT_DB_URL;\n  }\n\n  // Native Functions\n  /**\n   * Gets a key\n   * @param {String} key Key\n   * @param {boolean} [options.raw=false] Makes it so that we return the raw string value. Default is false.\n   */\n  async get(key, options) {\n    return await fetch(this.key + \"/\" + key)\n      .then((e) => e.text())\n      .then((strValue) => {\n        if (options && options.raw) {\n          return strValue;\n        }\n\n        if (!strValue) {\n          return null;\n        }\n\n        let value = strValue;\n        try {\n          // Try to parse as JSON, if it fails, we throw\n          value = JSON.parse(strValue);\n        } catch (_err) {\n          throw new SyntaxError(\n            `Failed to parse value of ${key}, try passing a raw option to get the raw value`\n          );\n        }\n\n        if (value === null || value === undefined) {\n          return null;\n        }\n\n        return value;\n      });\n  }\n\n  /**\n   * Sets a key\n   * @param {String} key Key\n   * @param {any} value Value\n   */\n  async set(key, value) {\n    const strValue = JSON.stringify(value);\n\n    await fetch(this.key, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: encodeURIComponent(key) + \"=\" + encodeURIComponent(strValue),\n    });\n    return this;\n  }\n\n  /**\n   * Deletes a key\n   * @param {String} key Key\n   */\n  async delete(key) {\n    await fetch(this.key + \"/\" + key, { method: \"DELETE\" });\n    return this;\n  }\n\n  /**\n   * List key starting with a prefix or list all.\n   * @param {String} prefix Filter keys starting with prefix.\n   */\n  async list(prefix = \"\") {\n    return await fetch(\n      this.key + `?encode=true&prefix=${encodeURIComponent(prefix)}`\n    )\n      .then((r) => r.text())\n      .then((t) => {\n        if (t.length === 0) {\n          return [];\n        }\n        return t.split(\"\\n\").map(decodeURIComponent);\n      });\n  }\n\n  // Dynamic Functions\n  /**\n   * Clears the database.\n   */\n  async empty() {\n    const promises = [];\n    for (const key of await this.list()) {\n      promises.push(this.delete(key));\n    }\n\n    await Promise.all(promises);\n\n    return this;\n  }\n\n  /**\n   * Get all key/value pairs and return as an object\n   */\n  async getAll() {\n    let output = {};\n    for (const key of await this.list()) {\n      let value = await this.get(key);\n      output[key] = value;\n    }\n    return output;\n  }\n\n  /**\n   * Sets the entire database through an object.\n   * @param {Object} obj The object.\n   */\n  async setAll(obj) {\n    for (const key in obj) {\n      let val = obj[key];\n      await this.set(key, val);\n    }\n    return this;\n  }\n\n  /**\n   * Delete multiple entries by keys\n   * @param {Array<string>} args Keys\n   */\n  async deleteMultiple(...args) {\n    const promises = [];\n\n    for (const arg of args) {\n      promises.push(this.delete(arg));\n    }\n\n    await Promise.all(promises);\n\n    return this;\n  }\n}\n\nmodule.exports = Client;\n"],
  "mappings": "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",
  "names": []
}
